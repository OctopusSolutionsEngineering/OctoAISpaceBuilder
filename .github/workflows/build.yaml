# The following workflow provides an opinionated template you can customize for your own needs.
#
# If you are not an Octopus user, the "Push to Octopus", "Generate Octopus Deploy build information",
# and "Create Octopus Release" steps can be safely deleted.
#
# To configure Octopus, set the OCTOPUS_API_TOKEN secret to the Octopus API key, and
# set the OCTOPUS_SERVER_URL secret to the Octopus URL.
#
# Double check the "project" and "deploy_to" properties in the "Create Octopus Release" step
# match your Octopus projects and environments.
#
# Get a trial Octopus instance from https://octopus.com/start

permissions:
  id-token: write
  checks: write
  contents: write
  packages: write

name: Go Build
'on':
  workflow_dispatch: {}
  push:
    paths-ignore:
      - '**/*.md'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/v1.3.0/opa_linux_amd64_static
          sudo install -o root -g root -m 0755 opa /usr/local/bin/opa
        shell: bash
      - name: Install Tofu
        run: |
          curl --proto '=https' --tlsv1.2 -fsSL https://get.opentofu.org/install-opentofu.sh -o install-opentofu.sh
          chmod +x install-opentofu.sh
          ./install-opentofu.sh --install-method deb
          rm -f install-opentofu.sh
        shell: bash
      - name: Start Azurite
        run: docker run -d -p 10000:10000 -p 10001:10001 -p 10002:10002 --restart unless-stopped mcr.microsoft.com/azure-storage/azurite
        shell: bash
      - name: Login to Octopus Deploy
        uses: OctopusDeploy/login@v1
        with:
          server: https://mattc.octopus.app
          service_account_id: 55561b45-c3e3-4e5c-83c9-353dab4a5360
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8
      - name: Set up Go
        uses: actions/setup-go@v3
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline
      - name: Install Dependencies
        run: go get ./...
        shell: bash
      - name: List Dependencies
        run: go list -m all > dependencies.txt
        shell: bash
      - name: Collect Dependencies
        uses: actions/upload-artifact@v4
        with:
          name: Dependencies
          path: dependencies.txt
      - name: List Dependency Updates
        run: go list -u -m -f "{{if .Update}}{{.}}{{end}}" all > dependencyUpdates.txt
        shell: bash
      - name: Collect Dependency Updates
        uses: actions/upload-artifact@v4
        with:
          name: Dependencies Updates
          path: dependencyUpdates.txt
      - name: Generate SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@v2
        with:
          version: v1
          args: mod -licenses -json -output functions/bom.json
      - run: go build -o functions/spacebuilder_linux_amd64_azure cmd/web/main.go
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
      - name: Test
        run: |-
          sudo apt-get install -y gotestsum
          gotestsum --junitfile results.xml -- -v -coverprofile=coverage.out -coverpkg=github.com/OctopusSolutionsEngineering/OctoAISpaceBuilder/... -timeout 0 -json ./...
          go tool cover -html=coverage.out -o=coverage.html
          go tool cover -func=coverage.out -o=coverage.out
        shell: bash
        env:
          GOMAXPROCS: 2
          LICENSE: ${{ secrets.LICENSE }}
          AzureWebJobsStorage: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;
      - name: Build patched version of TF provider
        run: |
          git clone https://github.com/OctopusDeploy/terraform-provider-octopusdeploy.git
          cd terraform-provider-octopusdeploy
          git checkout mattc/spacebuilder
          go get ./...
          go build -o terraform-provider-octopusdeploy
      - name: Download binaries
        run: |
          curl -L -o tofu.tar.gz https://github.com/opentofu/opentofu/releases/download/v1.9.0/tofu_1.9.0_linux_amd64.tar.gz
          tar -xzf tofu.tar.gz -C functions/binaries
          curl -L -o functions/binaries/opa_linux_amd64 https://github.com/open-policy-agent/opa/releases/download/v1.3.0/opa_linux_amd64
          chmod +x functions/binaries/opa_linux_amd64
          mkdir -p functions/provider/registry.opentofu.org/octopusdeploylabs/octopusdeploy/1.0.1/linux_amd64
          cp terraform-provider-octopusdeploy/terraform-provider-octopusdeploy functions/provider/registry.opentofu.org/octopusdeploy/octopusdeploy/1.0.1/linux_amd64/terraform-provider-octopusdeploy_v1.0.1
      # Note you must exclude the local.settings.json file from the zip. Otherwise, you get errors like:
      # Microsoft.Azure.WebJobs.Script: WorkerConfig for runtime: custom not found.
      - run: |
          zip -r spacebuilder_linux_amd64_azure.zip . -x local.settings.json
          cp spacebuilder_linux_amd64_azure.zip spacebuilder_azure.${{ steps.determine_version.outputs.semVer }}.zip
        working-directory: functions
      - name: Tag Release
        uses: mathieudutour/github-tag-action@v6.1
        continue-on-error: true
        with:
          custom_tag: ${{ steps.determine_version.outputs.semVer }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        continue-on-error: true
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          files: functions/spacebuilder_linux_amd64_azure.zip
      - name: Push packages to Octopus Deploy
        if: ${{ steps.branch-name.outputs.current_branch == 'main' }}
        uses: OctopusDeploy/push-package-action@v3
        env:
          OCTOPUS_URL: https://mattc.octopus.app
          OCTOPUS_SPACE: "Octopus Copilot"
        with:
          packages: functions/spacebuilder_azure.${{ steps.determine_version.outputs.semVer }}.zip
          overwrite_mode: OverwriteExisting
      - name: Create Octopus Release
        if: ${{ steps.branch-name.outputs.current_branch == 'main' }}
        uses: OctopusDeploy/create-release-action@v3
        env:
          OCTOPUS_URL: https://mattc.octopus.app
          OCTOPUS_SPACE: "Octopus Copilot"
        with:
          project: Octopus SpaceBuilder Function
          packages: octoterra_azure:${{ steps.determine_version.outputs.semVer }}
          release_number: ${{ steps.determine_version.outputs.semVer }}+${{ steps.determine_version.outputs.ShortSha }}.${{ github.run_number }}.${{ github.run_attempt }}
          git_ref: main
      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage.html
      - name: Go Coverage Badge
        if: always()
        uses: tj-actions/coverage-badge-go@v3
        with:
          filename: coverage.out
      - name: Verify Changed files
        if: always()
        uses: tj-actions/verify-changed-files@v20
        id: verify-changed-files
        with:
          files: README.md
      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        # This step fails if anything was pushed before the step was run.
        # It is not critical that the coverage badge be updated, so allow this step to fail.
        continue-on-error: true
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}